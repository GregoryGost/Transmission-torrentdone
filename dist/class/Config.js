import{normalize,dirname,join}from"node:path";import{fileURLToPath}from"node:url";import nconf from"nconf";class Config{rootPath=normalize(join(dirname(fileURLToPath(import.meta.url)),"../.."));nconf=nconf;devmode;appVersion;logLevel;dateFormat;logFilePath;ipAddress;port;login;password;mediaPath;serialsRootDir;filmsRootDir;allowedMediaExtensions;trAppVersion;trTorrentId;trTorrentName;trTorrentDir;trTorrentHash;trTimeLocaltime;trTorrentLabels;trTorrentBytesDownloaded;trTorrentTrackers;constructor(t){this.init(t),this.login=this.getParam("login"),this.password=this.getParam("password"),this.devmode="development"===this.getParam("node_env"),this.appVersion=this.getParam("version"),this.logLevel=this.devmode?"trace":this.getParam("log_level"),this.dateFormat=this.getParam("date_format"),this.logFilePath=this.getParam("log_file_path"),this.ipAddress=this.getParam("ip_address"),this.port=Number(this.getParam("tcp_port")),this.allowedMediaExtensions=Config.extensionsRegexTemplate(this.getParam("allowed_media_extensions")),this.mediaPath=this.devmode?normalize(this.rootPath+"/tests/mnt/data/media"):this.getParam("media_path"),this.serialsRootDir=this.getParam("serials_root_dir"),this.filmsRootDir=this.getParam("films_root_dir"),this.trAppVersion=this.getParam("TR_APP_VERSION"),this.trTorrentId=Number(this.getParam("TR_TORRENT_ID")),this.trTorrentName=this.getParam("TR_TORRENT_NAME"),this.trTorrentDir=this.getParam("TR_TORRENT_DIR"),this.trTorrentHash=this.getParam("TR_TORRENT_HASH"),this.trTimeLocaltime=this.getParam("TR_TIME_LOCALTIME"),this.trTorrentLabels=this.getParam("TR_TORRENT_LABELS"),this.trTorrentBytesDownloaded=Number(this.getParam("TR_TORRENT_BYTES_DOWNLOADED")),this.trTorrentTrackers=this.getParam("TR_TORRENT_TRACKERS")}init(t){let e=normalize(this.rootPath+"/config.json");void 0!==t&&(e=t),this.nconf.env(),this.nconf.file("config",e),this.nconf.file("package",normalize(this.rootPath+"/package.json")),this.nconf.defaults({node_env:"production",media_path:"/mnt/data/media",serials_root_dir:"TV Shows",films_root_dir:"Movies",log_level:"info",log_file_path:"/var/log/transmission/torrentdone.log",date_format:"DD.MM.YYYY HH:mm:ss",ip_address:"127.0.0.1",tcp_port:"9091",allowed_media_extensions:"mkv,mp4,avi"}),this.nconf.load(),this.check()}check(){var t=this.getParam("login"),e=this.getParam("password"),r=this.getParam("TR_APP_VERSION"),i=Number(this.getParam("TR_TORRENT_ID")),o=this.getParam("TR_TORRENT_NAME"),a=this.getParam("TR_TORRENT_DIR"),s=this.getParam("TR_TORRENT_HASH"),n=this.getParam("TR_TIME_LOCALTIME");if(void 0===t||void 0===e)throw new Error("Login or password must be filled in config file or Environment");if(void 0===r||NaN===i||void 0===a||void 0===o||void 0===s||void 0===n)throw new Error(`One or more parameters do not match the requirements: TR_APP_VERSION - "${r}", TR_TORRENT_ID - "${i}", TR_TORRENT_DIR - "${a}", TR_TORRENT_NAME - "${o}", TR_TORRENT_HASH - "${s}", TR_TIME_LOCALTIME - "${n}"`)}getParam(t){let e=this.nconf.get(t);return e=void 0===e?this.nconf.get(t.toUpperCase()):e}static extensionsRegexTemplate(t){var e=t.split(",");let r=".(";if(1<e.length)for(const i in e)0===Number(i)?r+=e[i]+"|":Number(i)===e.length-1?r+="|"+e[i]:r+=e[i];else r+=e[0];return r+=")",new RegExp(r,"i")}}export{Config};